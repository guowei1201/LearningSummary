Servlet
======

<servlet>
  <servlet-name>Hello</servlet-name>  --别名
  <servlet-class>xx.xx.Hello</servlet-class> --Servlet类文件
</servlet>

<servlet-mapping>
  <servlet-name>Hello</servlet-name>
  <url-pattern>/hello</url-pattern>  --虚拟路径
</servlet-mapping>
http://localhost:8080/MyWebsite/hello
先通过/hello 找到<servlet-mapping>中 Hello 再找到和它名字一样的<servlet> Hello，从而找到资源xx.xx.Hello




<url-pattern>标签的匹配方式
-----完整URL /HelloServlet
-----/目录/* 方式，以/目录作为开头的URL
-----/*.ext 以.ext结尾的地址



getParameter()方法
***href="RegistServlet?userName=zs”
****表单中name属性的获取
    <form action = "hello">
      <input type="text" name = "text" value="information">
      <input type= "submit" value = "submit">
    </form>
    
Attribute
  setAttibute():设置参数    request.setAttribute("attr","attribute");
  getAttibute() :获取某个参数的值  request.getAttribute("attr");

request.setCharacterEncoding("utf-8");
response.setContentType("text/html;charset=utf-8");

PrintWriter  writer = response.getWriter();
writer.write("内容");



请求转发:
request.getRequestDispatcher("targetURL").forward(request,response);
请求重定向
response.sendRedirect("targetURL");
本质
  请求重定向：二次请求
  请求转发：一次请求
速度
  请求转发 >请求重定向
Attribute参数
  请求转发可共享参数
  请求重定向不可共享参数
 
 
Servlet什么时候实例化
<load-on-startup>节点进行设置
当值为0或者大于0时，表示容器在应用启动时就加载这个servlet，当是一个负数时或者没有指定时，指示该servlet被选择时才加载。

















