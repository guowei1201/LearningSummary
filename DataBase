数据库恢复技术
1.事务 transaction
commit  ROLLBACK

****************************************************************
DBMS将理解为   3  个事务：（隐式）
Select * from student

Update student
Set sdept='IS'
Where sno='201215121'

Update student
Set sdept='CS'
Where sno='201215125'
****************************************************************
DBMS将理解为   2 个事务：（显式）
Select * from student
Begin transaction
    Update student
    Set sdept='IS'
    Where sno='201215121'

    Update student
    Set sdept='CS'
    Where sno='201215125'
COMMIT
****************************************************************



2.事务的ACID特性
原子性               一致性               隔离性             持久性
Atomicity          Consistency         Isolation           Durability


3.故障种类
----------------------------------------------------------------------------
 *  事务内部的故障 
事务内部更多的故障是非预期的，是不能由应用程序处理的
预算溢出，并发事务发生死锁而别选中撤销该事务，违反了某些完整性限制等（非预期的故障）
恢复：撤销事务（UNDO）


----------------------------------------------------------------------------
*  系统故障
发生故障时，事务未提交（强行撤销UNDO所有未完成事务）
发生系统故障时，事务已提交，但缓冲区中的信息尚未完全写回到磁盘上（重做REDO所有已提交的事务）


----------------------------------------------------------------------------
* 介质故障 * 计算机病毒


4.转储（状态：静态转储，动态转储    ********   转存方式：海量转储，增量转储）



////写日志文件操作：把表示这个修改的日志记录写到日志文件
////写数据库操作：把对数据的修改写到数据库中
5.为什么要先写日志文件
写数据库和写日志文件是两个不同的操作
在这两个操作之间可能发生故障
如果先写了数据库修改，而在日志文件中没有登记下这个修改，则以后就无法恢复这个修改了
如果先写日志，但没有修改数据库，按日志文件恢复时只不过是多执行一次不必要的UNDO操作，并不会影响数据库的正确性。


6.恢复策略
=======事务故障：由恢复子系统应利用日志文件撤销UNDO此事务已对数据库进行的修改事务故障的恢复由系统自动完成，对用户是透明的，不需要用户干预
（反向扫描日志文件，逆操作直至读到此事务的开始标记）

=======系统故障：未完成事务对数据库的更新已写入数据库，已提交事务对数据库的更新还停留在缓冲区没来得及写入数据库
（UNDO故障发生时未完成的事务，REDO已完成的事务）系统故障的恢复由系统在重新启动时自动完成，不需要用户干预
a.正向扫描日志文件：
重做（REDO）队列，在故障发生前已经提交的事务 这些事务既有BEGIN TRANSACTION记录，也有COMMIT记录
撤销（UNDO）队列，故障发生时尚未完成的事务 这些事务只有BEGIN TRANSACTION记录，无相应的COMMIT记录
b.对撤销（UNDO）队列事务进行UNDO(撤销)处理
反向扫描日志文件，对每个UNDO事务的更新操作执行逆操作.即将日志记录中“更新前的值”写入数据库 
c. 对重做(Redo)队列事务进行重做(REDO)处理
正向扫描日志文件，对每个REDO事务重新执行登记的操作.即将日志记录中“更新后的值”写入数据库

========介质故障：
装入最新的后备数据库副本(离故障发生时刻最近的转储副本) ，使数据库恢复到最近一次转储时的一致性状态
对于静态转储的数据库副本，装入后数据库即处于一致性状态
对于动态转储的数据库副本，还须同时装入转储时刻的日志文件副本，利用与恢复系统故障的方法（即REDO+UNDO），才能将数据库恢复到一致性状态






























